{"version":3,"sources":["notes.js","vex-flow.js","note-button.js","single-note-game.js","interval-game.js","App.js","serviceWorker.js","index.js"],"names":["basicNotes","trebleNotes","answer","note","bassNotes","VF","VexFlow","Flow","Formatter","Renderer","Stave","StaveNote","Score","keys","clef","width","height","container","useRef","rendererRef","useEffect","current","Backends","SVG","renderer","resize","context","getContext","clear","setFont","setBackgroundFillStyle","stave","setWidth","staveWidth","addClef","setContext","draw","stavedNotes","duration","FormatAndDraw","auto_beam","ref","StyledNoteButton","styled","button","props","color","NoteButton","onNoteClick","currentNote","onClick","StyledScore","StyledPicker","div","chance","Chance","pickNewNote","notes","nextNote","pickone","SingleNoteGame","useState","setAnswer","map","key","distances","d8","distance","start","d4","StyledApp","StyledGameButton","isActive","App","gameId","setGameId","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.13a2c074.chunk.js","sourcesContent":["export const basicNotes = ['a','b','c','d','e','f','g'];\n\nexport const trebleNotes = [\n    {\n        answer: 'c',\n        note: 'c/4'\n    },{\n        answer: 'd',\n        note: 'd/4'\n    },{\n        answer: 'e',\n        note: 'e/4'\n    },{\n        answer: 'f',\n        note: 'f/4'\n    },{\n        answer: 'g',\n        note: 'g/4'\n    },{\n        answer: 'a',\n        note: 'a/4'\n    },{\n        answer: 'b',\n        note: 'b/4'\n    },{\n        answer: 'c',\n        note: 'c/5'\n    },{\n        answer: 'd',\n        note: 'd/5'\n    },{\n        answer: 'e',\n        note: 'e/5'\n    },{\n        answer: 'f',\n        note: 'f/5'\n    },{\n        answer: 'g',\n        note: 'g/5'\n    },{\n        answer: 'a',\n        note: 'a/5'\n    }\n];\n\nexport const bassNotes = [\n    {\n        answer: 'e',\n        note: 'e/2'\n    },{\n        answer: 'f',\n        note: 'f/2'\n    },{\n        answer: 'g',\n        note: 'g/2'\n    },{\n        answer: 'a',\n        note: 'a/3'\n    },{\n        answer: 'b',\n        note: 'b/3'\n    },{\n        answer: 'c',\n        note: 'c/3'\n    },{\n        answer: 'd',\n        note: 'd/3'\n    },{\n        answer: 'e',\n        note: 'e/3'\n    },{\n        answer: 'f',\n        note: 'f/3'\n    },{\n        answer: 'g',\n        note: 'g/3'\n    },{\n        answer: 'a',\n        note: 'a/3'\n    },{\n        answer: 'b',\n        note: 'b/3'\n    },{\n        answer: 'c',\n        note: 'c/3'\n    }\n];\n","import React, { useRef, useEffect } from 'react'\nimport VexFlow from 'vexflow'\n\nconst VF = VexFlow.Flow\nconst { Formatter, Renderer, Stave, StaveNote } = VF\nconst clefAndTimeWidth = 60;\n\nexport function Score({\n  keys,\n  clef,\n  width = 262,\n  height = 150,\n}) {\n  const container = useRef()\n  const rendererRef = useRef()\n\n  useEffect(() => {\n    if (rendererRef.current == null) {\n      rendererRef.current = new Renderer(\n        container.current,\n        Renderer.Backends.SVG\n      )\n    }\n    const renderer = rendererRef.current\n    renderer.resize(width, height)\n    const context = renderer.getContext()\n    context.clear();\n    context.setFont('Arial', 10, '').setBackgroundFillStyle('#eed')\n    const staveWidth = 180;\n\n    const stave = new Stave(0, 0, staveWidth);\n    stave.setWidth(staveWidth + clefAndTimeWidth);\n    stave.addClef(clef);\n    stave.setContext(context).draw();\n\n    const stavedNotes = new StaveNote({\n      clef,\n      keys: keys,\n      duration: 'q',\n    });\n\n    Formatter.FormatAndDraw(context, stave, [stavedNotes], {\n      auto_beam: true,\n    });\n\n  }, [keys])\n\n  return <div ref={container} />\n}","import React from 'react';\nimport styled from 'styled-components'\n\nconst StyledNoteButton = styled.button`\n    border: 1px solid black;\n    border-radius: 8px;\n    background: white;\n    display: inline-block;\n    font-size: 20px;\n    padding: 24px 40px;\n    text-decoration: none;\n    margin: 4px;\n    text-align: center;\n\n    :active {\n        background: ${(props) => props.color};\n    }\n`;\n\nconst NoteButton = ({note, onNoteClick, currentNote}) => {\n    const color = currentNote.answer === note ? '#ADFF2F' : '#CCC';\n\n    return <StyledNoteButton \n            color={color} \n            onClick={() => onNoteClick(note)}>\n        {note}\n    </StyledNoteButton>\n}\n\nexport default NoteButton;","import React, { useState } from 'react';\nimport Chance from 'chance';\nimport styled from 'styled-components';\n\nimport { Score } from './vex-flow'\nimport {basicNotes} from './notes';\nimport NoteButton from './note-button';\n\nconst StyledScore = styled(Score)`\n    height: 150px;\n    width: 100%;\n`;\n\nconst StyledPicker = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n`;\n\nconst chance = new Chance();\n\nconst pickNewNote = (notes, currentNote = {}) => {\n    let nextNote = chance.pickone(notes);\n\n    while(nextNote.answer === currentNote.answer){\n        nextNote = chance.pickone(notes);\n    }\n\n    return nextNote;\n};\n\nconst SingleNoteGame = ({notes, clef}) => {\n    const [currentNote, setAnswer] = useState(pickNewNote(notes));\n\n    const onNoteClick = (note) => {\n        if(note === currentNote.answer) {\n            const nextNote = pickNewNote(notes, currentNote);\n\n            setAnswer(nextNote);\n        }\n    }\n    \n    return <>\n        <StyledScore\n            clef={clef}\n            keys={\n                [currentNote.note]\n            }\n        />\n        <StyledPicker>\n            {basicNotes.map((note) =>\n                <NoteButton \n                key={note}\n                currentNote={currentNote} \n                note={note} \n                onNoteClick={onNoteClick} />\n            )}\n        </StyledPicker>\n    </>\n}\n\nexport default SingleNoteGame;","import React, { useState } from 'react';\nimport Chance from 'chance';\nimport styled from 'styled-components';\n\nimport { Score } from './vex-flow'\nimport NoteButton from './note-button';\n\nconst StyledScore = styled(Score)`\n    height: 150px;\n    width: 100%;\n`;\n\nconst StyledPicker = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n`;\n\nconst chance = new Chance();\nconst distances = [1,2,3,4,5,6,7,8];\n\nconst SingleNoteGame = ({notes, clef}) => {\n    const [distance, setAnswer] = useState(chance.d8());\n    const start = chance.d4();\n    const onNoteClick = (note) => {\n        if(note === distance) {\n            const nextNote = chance.d8()\n\n            setAnswer(nextNote);\n        }\n    }\n    \n    return <>\n        <StyledScore\n            clef={clef}\n            keys={[notes[start].note, notes[distance + start].note]}\n        />\n        {<StyledPicker>\n            {distances.map((note) =>\n                <NoteButton \n                key={note}\n                currentNote={({answer: distance})} \n                note={note} \n                onNoteClick={onNoteClick} />\n            )}\n        </StyledPicker>}\n    </>\n}\n\nexport default SingleNoteGame;","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport { trebleNotes, bassNotes } from './notes';\nimport SingleNoteGame from './single-note-game';\nimport IntervalGame from './interval-game';\n\nconst StyledApp = styled.div`\n    padding-top: 24px;\n    text-align: center;\n`;\n\nconst StyledGameButton = styled.button`\n    border: 1px solid black;\n    border-radius: 8px;\n    background: ${(props) => props.isActive ? '#e0e0e0': 'white'};\n    display: inline-block;\n    font-size: 20px;\n    padding: 16px 48px;\n    text-decoration: none;\n    margin: 4px;\n    text-align: center;\n\n    :active {\n        background: #ccc;\n    }\n`;\n\nfunction App() {\n  const [gameId, setGameId] = useState(0);\n\n  return (\n    <StyledApp className=\"App\">\n      <div>\n        <StyledGameButton isActive={!gameId} onClick={() => setGameId(0)}>{'Treble'}</StyledGameButton>\n        <StyledGameButton isActive={gameId === 1} onClick={() => setGameId(1)}>{'Bass'}</StyledGameButton>\n        <StyledGameButton isActive={gameId === 2} onClick={() => setGameId(2)}>{'Interval'}</StyledGameButton>\n      </div>\n      <h2>{'What note is this?'}</h2>\n      {!gameId && <SingleNoteGame clef={'treble'} notes={trebleNotes} />}\n      {gameId === 1 && <SingleNoteGame clef={'bass'} notes={bassNotes} />}\n      {gameId === 2 && <IntervalGame clef={'treble'} notes={trebleNotes} />}\n    </StyledApp>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}