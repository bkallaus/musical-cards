{"version":3,"sources":["vex-flow.js","note-button.js","notes.js","note-picker.js","single-note-game.js","App.js","serviceWorker.js","index.js"],"names":["VF","VexFlow","Flow","Formatter","Renderer","Stave","StaveNote","Score","staves","clef","width","height","container","useRef","rendererRef","useEffect","current","Backends","SVG","renderer","resize","context","getContext","clear","setFont","setBackgroundFillStyle","currX","forEach","notes","i","stave","setWidth","staveWidth","addClef","getWidth","setContext","draw","processedNotes","map","note","key","Array","isArray","duration","rest","includes","slice","keys","String","FormatAndDraw","auto_beam","ref","StyledNoteButton","styled","button","NoteButton","onNoteClick","onClick","basicNotes","StyledPicker","div","notePicker","SingleNoteGame","chance","Chance","randomAnswer","pickone","useState","currentNote","setAnswer","answer","StyledApp","StyledGameButton","games","App","gameId","setGameId","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4e1fb530.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react'\nimport VexFlow from 'vexflow'\n\nconst VF = VexFlow.Flow\nconst { Formatter, Renderer, Stave, StaveNote } = VF\n\nconst clefAndTimeWidth = 60\n\nexport function Score({\n  staves = [],\n  clef,\n  width = 300,\n  height = 150,\n}) {\n  const container = useRef()\n  const rendererRef = useRef()\n\n  useEffect(() => {\n    if (rendererRef.current == null) {\n      rendererRef.current = new Renderer(\n        container.current,\n        Renderer.Backends.SVG\n      )\n    }\n    const renderer = rendererRef.current\n    renderer.resize(width, height)\n    const context = renderer.getContext()\n    context.clear();\n    context.setFont('Arial', 10, '').setBackgroundFillStyle('#eed')\n    const staveWidth = 200;\n\n    let currX = 0\n    staves.forEach((notes, i) => {\n      const stave = new Stave(currX, 0, staveWidth)\n      if (i === 0) {\n        stave.setWidth(staveWidth + clefAndTimeWidth)\n        stave.addClef(clef)\n      }\n      currX += stave.getWidth()\n      stave.setContext(context).draw()\n\n      const processedNotes = notes\n        .map(note => (typeof note === 'string' ? { key: note } : note))\n        .map(note =>\n          Array.isArray(note) ? { key: note[0], duration: note[1] } : note\n        )\n        .map(({ key, ...rest }) =>\n          typeof key === 'string'\n            ? {\n                key: key.includes('/') ? key : `${key[0]}/${key.slice(1)}`,\n                ...rest,\n              }\n            : rest\n        )\n        .map(\n          ({ key, keys, duration = 'q' }) =>\n            new StaveNote({\n              keys: key ? [key] : keys,\n              duration: String(duration),\n            })\n        )\n      Formatter.FormatAndDraw(context, stave, processedNotes, {\n        auto_beam: true,\n      })\n    })\n  }, [staves])\n\n  return <div ref={container} />\n}","import React from 'react';\nimport styled from 'styled-components'\n\nconst StyledNoteButton = styled.button`\n    border: 1px solid black;\n    border-radius: 8px;\n    background: white;\n    display: inline-block;\n    font-size: 20px;\n    padding: 24px 40px;\n    text-decoration: none;\n    margin: 4px;\n    text-align: center;\n\n    :active {\n        background: grey;\n    }\n`;\n\nconst NoteButton = ({note, onNoteClick}) => {\n    return <StyledNoteButton onClick={() => onNoteClick(note)}>\n        {note}\n    </StyledNoteButton>\n}\n\n\nexport default NoteButton;","export const basicNotes = ['a','b','c','d','e','f','g'];\n\nexport const trebleNotes = [\n    {\n        answer: 'c',\n        note: 'c4'\n    },{\n        answer: 'd',\n        note: 'd4'\n    },{\n        answer: 'e',\n        note: 'e4'\n    },{\n        answer: 'f',\n        note: 'f4'\n    },{\n        answer: 'g',\n        note: 'g4'\n    },{\n        answer: 'a',\n        note: 'a4'\n    },{\n        answer: 'b',\n        note: 'b4'\n    },{\n        answer: 'c',\n        note: 'c5'\n    },{\n        answer: 'd',\n        note: 'd5'\n    },{\n        answer: 'e',\n        note: 'e5'\n    },{\n        answer: 'f',\n        note: 'f5'\n    },{\n        answer: 'g',\n        note: 'g5'\n    },{\n        answer: 'a',\n        note: 'a5'\n    }\n];\n\nexport const bassNotes = [\n    {\n        answer: 'e',\n        note: 'c4'\n    },{\n        answer: 'f',\n        note: 'd4'\n    },{\n        answer: 'g',\n        note: 'e4'\n    },{\n        answer: 'a',\n        note: 'f4'\n    },{\n        answer: 'b',\n        note: 'g4'\n    },{\n        answer: 'c',\n        note: 'a4'\n    },{\n        answer: 'd',\n        note: 'b4'\n    },{\n        answer: 'e',\n        note: 'c5'\n    },{\n        answer: 'f',\n        note: 'd5'\n    },{\n        answer: 'g',\n        note: 'e5'\n    },{\n        answer: 'a',\n        note: 'f5'\n    },{\n        answer: 'b',\n        note: 'g5'\n    },{\n        answer: 'c',\n        note: 'a5'\n    }\n];\n","import React from 'react';\nimport NoteButton from './note-button';\nimport {basicNotes} from './notes';\nimport styled from 'styled-components'\n\nconst StyledPicker = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n`;\n\nconst notePicker = ({onNoteClick}) => {\n    return <StyledPicker>\n        {basicNotes.map((note) => <NoteButton key={note} note={note} onNoteClick={onNoteClick} />)}\n    </StyledPicker>\n\n};\n\nexport default notePicker;","import React, { useState } from 'react';\nimport Chance from 'chance';\n\nimport { Score } from './vex-flow'\nimport NotePicker from './note-picker';\n\nconst SingleNoteGame = ({notes, clef}) => {\n    const chance = new Chance();\n    const randomAnswer = () => chance.pickone(notes);\n    const [currentNote, setAnswer] = useState(randomAnswer());\n\n    const onNoteClick = (note) =>{\n      if(note === currentNote.answer) {\n          setAnswer(randomAnswer());\n      }\n    }\n    \n    return <>\n        <Score\n        height={150}\n        width={262}\n        clef={clef}\n        staves={[\n            [currentNote.note]\n        ]}\n        />\n        <NotePicker onNoteClick={onNoteClick}/>\n    </>\n}\n\nexport default SingleNoteGame;","import React, {useState} from 'react';\nimport styled from 'styled-components';\nimport SingleNoteGame from './single-note-game';\nimport { trebleNotes, bassNotes } from './notes';\n\nconst StyledApp = styled.div`\n    padding-top: 24px;\n    text-align: center;\n`;\n\nconst StyledGameButton = styled.button`\n    border: 1px solid black;\n    border-radius: 8px;\n    background: white;\n    display: inline-block;\n    font-size: 20px;\n    padding: 16px 48px;\n    text-decoration: none;\n    margin: 4px;\n    text-align: center;\n\n    :active {\n        background: grey;\n    }\n`;\n\nconst games = [\n   <SingleNoteGame clef={'treble'} notes={trebleNotes} />,\n   <SingleNoteGame clef={'bass'} notes={bassNotes}  />\n  ];\n\nfunction App() {\n  const [gameId, setGameId] = useState(0);\n\n  return (\n    <StyledApp className=\"App\">\n      <div>\n        <StyledGameButton onClick={() => setGameId(0)}>{'Treble'}</StyledGameButton>\n        <StyledGameButton onClick={() => setGameId(1)}>{'Bass'}</StyledGameButton>\n      </div>\n      {games[gameId]}\n    </StyledApp>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}